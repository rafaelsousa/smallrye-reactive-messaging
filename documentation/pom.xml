<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.smallrye.reactive</groupId>
    <artifactId>smallrye-reactive-messaging</artifactId>
    <version>2.9.0-SNAPSHOT</version>
  </parent>

  <artifactId>documentation</artifactId>
  <packaging>pom</packaging>

  <name>SmallRye Reactive Messaging : Documentation</name>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <output.antora.directory>${project.build.directory}/antora</output.antora.directory>
    <antora.file>src/main/doc/antora.yml</antora.file>

    <sonar.skip>true</sonar.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-http</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-provider</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-kafka</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-amqp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-camel</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-jms</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-mqtt</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-mqtt-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-vertx-eventbus</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.jms</groupId>
      <artifactId>jakarta.jms-api</artifactId>
    </dependency>

    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-in-memory</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-file</artifactId>
      <version>${camel.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>compile</scope>
      <version>${version.junit5}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <!-- used in snippets -->
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
      <version>${weld.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <!-- Here we list all the "examples" directory from the modules -->
              <sources>
                <source>src/main/doc/modules/ROOT/examples</source>
                <source>src/main/doc/modules/kafka/examples</source>
                <source>src/main/doc/modules/amqp/examples</source>
                <source>src/main/doc/modules/camel/examples</source>
                <source>src/main/doc/modules/jms/examples</source>
                <source>src/main/doc/modules/mqtt/examples</source>
                <source>src/main/doc/modules/mqtt-server/examples</source>
                <source>src/main/doc/modules/http/examples</source>
                <source>src/main/doc/modules/vertx-event-bus/examples</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Unpack the connector config page to a specific modules in the `partials` family. -->
        <!-- NOTE: this modify the source tree, so every time there is an update, the new file must be committed and pushed -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>extract-generated-documentation</id>
            <!-- must happen after packaging -->
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>src/main/doc/modules/connectors/partials</outputDirectory>
              <includes>**/connector/*.adoc</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- This part of the build is generating the Antora structure in `target` for generation purpose -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>update-antora-file</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>src/main/doc</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/antora</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>antora.yml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-modules</id>
            <phase>verify</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${output.antora.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/doc</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-bundle-ui</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${output.antora.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/antora</directory>
                  <excludes>
                    <exclude>*.yml</exclude>
                  </excludes>
                </resource>
              </resources>
              <nonFilteredFileExtensions>
                <nonFilteredFileExtension>zip</nonFilteredFileExtension>
              </nonFilteredFileExtensions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <configuration>
          <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
